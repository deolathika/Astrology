"use strict";(()=>{var t={};t.id=5285,t.ids=[5285],t.modules={20399:t=>{t.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:t=>{t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},74585:(t,i,e)=>{e.r(i),e.d(i,{originalPathname:()=>h,patchFetch:()=>m,requestAsyncStorage:()=>f,routeModule:()=>g,serverHooks:()=>y,staticGenerationAsyncStorage:()=>p});var n={};e.r(n),e.d(n,{GET:()=>l,POST:()=>u});var a=e(49303),s=e(88716),r=e(60670),o=e(87070);class c{async initialize(){if(!this.isInitialized)try{await this.initializeFCM(),await this.registerServiceWorker(),await this.requestPermission(),this.isInitialized=!0}catch(t){throw Error("Notification system initialization failed")}}async sendDailyGuidance(t,i){let e=this.notificationSettings.get(t);if(!e?.dailyGuidance)return!1;let n={id:this.generateId(),type:"daily_guidance",title:"Today's Cosmic Guidance",body:i.substring(0,100)+"...",actionUrl:"/today",priority:"high",category:"guidance"};return await this.sendNotification(t,n)}async sendTransitAlert(t,i,e,n){let a=this.notificationSettings.get(t);if(!a?.transitAlerts)return!1;let s={id:this.generateId(),type:"transit_alert",title:`Transit Alert: ${i} ${e}`,body:n,actionUrl:"/transits",priority:"normal",category:"transits"};return await this.sendNotification(t,s)}async sendCommunityNotification(t,i,e){let n=this.notificationSettings.get(t);if(!n?.communityUpdates)return!1;let a={id:this.generateId(),type:"community",title:`New message from ${i}`,body:e,actionUrl:"/community",priority:"normal",category:"community"};return await this.sendNotification(t,a)}async sendStreakReminder(t,i){let e=this.notificationSettings.get(t);if(!e?.streakReminders)return!1;let n={id:this.generateId(),type:"streak",title:"Keep your streak going!",body:`You've checked in ${i} days in a row. Don't break the chain!`,actionUrl:"/home",priority:"normal",category:"streak"};return await this.sendNotification(t,n)}async scheduleNotification(t,i,e){let n=new Date,a=e.getTime()-n.getTime();return a<=0?await this.sendNotification(t,i):(setTimeout(async()=>{await this.sendNotification(t,i)},a),!0)}updateSettings(t,i){this.notificationSettings.set(t,i)}getSettings(t){return this.notificationSettings.get(t)||null}async clearNotifications(t){"serviceWorker"in navigator&&navigator.serviceWorker.controller&&navigator.serviceWorker.controller.postMessage({type:"CLEAR_NOTIFICATIONS",userId:t})}async getNotificationHistory(t){return[]}async initializeFCM(){if(this.fcmConfig)try{let{initializeApp:t}=await Promise.all([e.e(6722),e.e(9362)]).then(e.bind(e,29362)),{getMessaging:i,getToken:n}=await Promise.all([e.e(6722),e.e(7931)]).then(e.bind(e,47931)),a={apiKey:process.env.NEXT_PUBLIC_FIREBASE_API_KEY,authDomain:process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,projectId:this.fcmConfig.projectId,storageBucket:process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,messagingSenderId:this.fcmConfig.messagingSenderId,appId:process.env.NEXT_PUBLIC_FIREBASE_APP_ID},s=t(a),r=i(s),o=await n(r,{vapidKey:process.env.NEXT_PUBLIC_FCM_VAPID_KEY});o&&localStorage.setItem("fcm_token",o)}catch(t){}}async registerServiceWorker(){if("serviceWorker"in navigator)try{let t=await navigator.serviceWorker.register("/sw.js");this.serviceWorker=t.active||t.installing||t.waiting}catch(t){}}async requestPermission(){return"Notification"in window?"granted"===Notification.permission?"granted":"denied"===Notification.permission?"denied":await Notification.requestPermission():"denied"}async sendNotification(t,i){try{let e=this.notificationSettings.get(t);if(e?.quietHours?.enabled&&this.isInQuietHours(e.quietHours))return!1;if(this.fcmConfig&&await this.sendFCMNotification(t,i))return!0;return await this.sendLocalNotification(i)}catch(t){return!1}}async sendFCMNotification(t,i){try{return(await fetch("/api/notifications/send",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,notification:i})})).ok}catch(t){return!1}}async sendLocalNotification(t){if("granted"!==Notification.permission)return!1;try{let i=new Notification(t.title,{body:t.body,icon:"/icon-192.png",badge:"/icon-192.png",tag:t.id,data:t.data,requireInteraction:"high"===t.priority,actions:[{action:"view",title:"View",icon:"/icon-192.png"},{action:"dismiss",title:"Dismiss"}]});return i.onclick=()=>{t.actionUrl&&(window.location.href=t.actionUrl),i.close()},!0}catch(t){return!1}}isInQuietHours(t){let i=new Date,e=60*i.getHours()+i.getMinutes(),[n,a]=t.start.split(":").map(Number),[s,r]=t.end.split(":").map(Number),o=60*n+a,c=60*s+r;return o<=c?e>=o&&e<=c:e>=o||e<=c}generateId(){return Math.random().toString(36).substr(2,9)}setFCMConfig(t){this.fcmConfig=t}getStatus(){return{initialized:this.isInitialized,fcmConfigured:null!==this.fcmConfig,serviceWorkerActive:null!==this.serviceWorker,permission:Notification.permission}}constructor(){this.fcmConfig=null,this.isInitialized=!1,this.serviceWorker=null,this.notificationSettings=new Map}}let d=new c;async function u(t){try{let{userId:i,notification:e}=await t.json();if(!i||!e)return o.NextResponse.json({error:"User ID and notification required"},{status:400});d.getStatus().initialized||await d.initialize();let n=!1;switch(e.type){case"daily_guidance":n=await d.sendDailyGuidance(i,e.body);break;case"transit_alert":n=await d.sendTransitAlert(i,e.data?.planet,e.data?.aspect,e.body);break;case"community":n=await d.sendCommunityNotification(i,e.data?.fromUser,e.body);break;case"streak":n=await d.sendStreakReminder(i,e.data?.streakDays||1);break;default:return o.NextResponse.json({error:"Invalid notification type"},{status:400})}return o.NextResponse.json({success:n,timestamp:new Date().toISOString()})}catch(t){return o.NextResponse.json({error:"Notification send failed"},{status:500})}}async function l(t){try{let{searchParams:i}=new URL(t.url),e=i.get("userId"),n=i.get("action");if(!e)return o.NextResponse.json({error:"User ID required"},{status:400});switch(n){case"settings":let a=d.getSettings(e);return o.NextResponse.json({success:!0,settings:a});case"history":let s=await d.getNotificationHistory(e);return o.NextResponse.json({success:!0,history:s});case"clear":return await d.clearNotifications(e),o.NextResponse.json({success:!0});default:return o.NextResponse.json({error:"Invalid action"},{status:400})}}catch(t){return o.NextResponse.json({error:"Notification operation failed"},{status:500})}}let g=new a.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/notifications/send/route",pathname:"/api/notifications/send",filename:"route",bundlePath:"app/api/notifications/send/route"},resolvedPagePath:"/Users/lathikadissanayaka/P E R S O N A L/daily_secrets_app/src/app/api/notifications/send/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:f,staticGenerationAsyncStorage:p,serverHooks:y}=g,h="/api/notifications/send/route";function m(){return(0,r.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:p})}}};var i=require("../../../../webpack-runtime.js");i.C(t);var e=t=>i(i.s=t),n=i.X(0,[9276,5972],()=>e(74585));module.exports=n})();