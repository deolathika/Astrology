# Cosmic Secrets App - Deployment Configuration
# Frontend & Backend Deployment Setup

# Frontend Configuration (Flutter Web)
frontend:
  platform: "flutter_web"
  build_command: "flutter build web --release"
  output_directory: "build/web"
  port: 3000
  environment: "production"
  
  # CDN Configuration
  cdn:
    provider: "cloudflare"
    domain: "cosmicsecrets.app"
    ssl: true
    compression: true
    caching:
      static_assets: "1y"
      api_responses: "5m"
  
  # Performance Optimization
  optimization:
    minification: true
    tree_shaking: true
    code_splitting: true
    lazy_loading: true
    service_worker: true
    pwa: true

# Backend Configuration (Node.js/Express)
backend:
  platform: "nodejs"
  runtime: "node:18"
  framework: "express"
  port: 8080
  environment: "production"
  
  # Database Configuration
  database:
    primary: "mongodb"
    connection_string: "${MONGODB_URI}"
    collections:
      - "users"
      - "astrology_data"
      - "numerology_data"
      - "dreams"
      - "settings"
      - "analytics"
  
  # Redis Cache
  cache:
    provider: "redis"
    connection_string: "${REDIS_URI}"
    ttl: 3600
  
  # API Configuration
  api:
    version: "v1"
    rate_limiting:
      window_ms: 900000
      max_requests: 100
    cors:
      origin: ["https://cosmicsecrets.app"]
      credentials: true
    authentication:
      jwt_secret: "${JWT_SECRET}"
      expires_in: "7d"
  
  # External Services
  services:
    astrology_engine: "swiss_ephemeris"
    ai_service: "openai"
    translation_service: "google_translate"
    analytics: "firebase_analytics"
    notifications: "firebase_fcm"
    payments: "stripe"

# Infrastructure Configuration
infrastructure:
  provider: "aws"
  region: "us-east-1"
  
  # Compute Resources
  compute:
    frontend:
      service: "cloudfront"
      distribution_id: "${CLOUDFRONT_DISTRIBUTION_ID}"
    backend:
      service: "ecs"
      cluster: "cosmic-secrets-cluster"
      task_definition: "cosmic-secrets-backend"
      cpu: "512"
      memory: "1024"
      desired_count: 2
  
  # Database Resources
  database:
    service: "documentdb"
    instance_class: "db.t3.medium"
    multi_az: true
    backup_retention: 7
  
  # Cache Resources
  cache:
    service: "elasticache"
    node_type: "cache.t3.micro"
    num_cache_nodes: 1
  
  # Monitoring & Logging
  monitoring:
    service: "cloudwatch"
    log_groups:
      - "/aws/ecs/cosmic-secrets"
      - "/aws/lambda/cosmic-secrets"
    alarms:
      - "high_cpu_utilization"
      - "high_memory_utilization"
      - "database_connections"
  
  # Security
  security:
    waf: true
    ssl_certificate: "arn:aws:acm:us-east-1:ACCOUNT:certificate/CERT_ID"
    secrets_manager: true
    vpc: true
    private_subnets: true

# CI/CD Pipeline
pipeline:
  provider: "github_actions"
  
  # Frontend Pipeline
  frontend_pipeline:
    trigger: "push to main"
    steps:
      - "checkout"
      - "setup_flutter"
      - "install_dependencies"
      - "run_tests"
      - "build_web"
      - "deploy_to_cloudfront"
  
  # Backend Pipeline
  backend_pipeline:
    trigger: "push to main"
    steps:
      - "checkout"
      - "setup_node"
      - "install_dependencies"
      - "run_tests"
      - "build_docker_image"
      - "push_to_ecr"
      - "deploy_to_ecs"
  
  # Database Migrations
  database_pipeline:
    trigger: "manual"
    steps:
      - "checkout"
      - "setup_node"
      - "run_migrations"
      - "verify_schema"

# Environment Variables
environment:
  # Database
  MONGODB_URI: "${secrets.MONGODB_URI}"
  REDIS_URI: "${secrets.REDIS_URI}"
  
  # Authentication
  JWT_SECRET: "${secrets.JWT_SECRET}"
  
  # External APIs
  OPENAI_API_KEY: "${secrets.OPENAI_API_KEY}"
  GOOGLE_TRANSLATE_API_KEY: "${secrets.GOOGLE_TRANSLATE_API_KEY}"
  STRIPE_SECRET_KEY: "${secrets.STRIPE_SECRET_KEY}"
  STRIPE_PUBLISHABLE_KEY: "${secrets.STRIPE_PUBLISHABLE_KEY}"
  
  # Firebase
  FIREBASE_PROJECT_ID: "${secrets.FIREBASE_PROJECT_ID}"
  FIREBASE_PRIVATE_KEY: "${secrets.FIREBASE_PRIVATE_KEY}"
  FIREBASE_CLIENT_EMAIL: "${secrets.FIREBASE_CLIENT_EMAIL}"
  
  # CDN
  CLOUDFRONT_DISTRIBUTION_ID: "${secrets.CLOUDFRONT_DISTRIBUTION_ID}"
  
  # App Configuration
  NODE_ENV: "production"
  PORT: "8080"
  CORS_ORIGIN: "https://cosmicsecrets.app"

# Scaling Configuration
scaling:
  # Auto Scaling
  auto_scaling:
    enabled: true
    min_capacity: 2
    max_capacity: 10
    target_cpu_utilization: 70
    target_memory_utilization: 80
  
  # Load Balancing
  load_balancer:
    type: "application"
    health_check:
      path: "/health"
      interval: 30
      timeout: 5
      healthy_threshold: 2
      unhealthy_threshold: 3

# Backup & Recovery
backup:
  # Database Backup
  database:
    automated: true
    frequency: "daily"
    retention: "30d"
    encryption: true
  
  # Application Backup
  application:
    automated: true
    frequency: "weekly"
    retention: "12w"
    encryption: true
  
  # Disaster Recovery
  disaster_recovery:
    rto: "4h"  # Recovery Time Objective
    rpo: "1h"  # Recovery Point Objective
    multi_region: true

# Security Configuration
security:
  # SSL/TLS
  ssl:
    certificate: "wildcard"
    minimum_tls_version: "1.2"
    hsts: true
  
  # API Security
  api_security:
    rate_limiting: true
    request_validation: true
    sql_injection_protection: true
    xss_protection: true
  
  # Data Protection
  data_protection:
    encryption_at_rest: true
    encryption_in_transit: true
    pii_encryption: true
    gdpr_compliance: true

# Monitoring & Alerting
monitoring:
  # Application Monitoring
  application:
    provider: "datadog"
    metrics:
      - "response_time"
      - "error_rate"
      - "throughput"
      - "cpu_usage"
      - "memory_usage"
  
  # Database Monitoring
  database:
    metrics:
      - "connection_count"
      - "query_performance"
      - "storage_usage"
      - "replication_lag"
  
  # Alerting
  alerting:
    channels:
      - "email"
      - "slack"
      - "pagerduty"
    thresholds:
      error_rate: "5%"
      response_time: "2s"
      cpu_usage: "80%"
      memory_usage: "85%"

# Cost Optimization
cost_optimization:
  # Resource Optimization
  resources:
    right_sizing: true
    reserved_instances: true
    spot_instances: false
  
  # Storage Optimization
  storage:
    lifecycle_policies: true
    compression: true
    deduplication: true
  
  # Network Optimization
  network:
    cdn_usage: true
    compression: true
    caching: true

# Compliance & Governance
compliance:
  # Data Privacy
  data_privacy:
    gdpr: true
    ccpa: true
    data_retention: "7y"
    data_deletion: true
  
  # Security Standards
  security_standards:
    soc2: true
    iso27001: true
    pci_dss: false
  
  # Audit
  audit:
    logging: true
    monitoring: true
    alerting: true
    reporting: true
