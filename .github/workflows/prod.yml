name: Production Build and Deploy

on:
  push:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run type checking
      run: npm run type-check
      
    - name: Run tests
      run: npm run test
      
    - name: Build production
      run: npm run build:prod
      env:
        NODE_ENV: production
        NEXT_PUBLIC_APP_ENV: production
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: prod-build
        path: .next/
        
  deploy-prod:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for production
      run: npm run build:prod
      env:
        NODE_ENV: production
        NEXT_PUBLIC_APP_ENV: production
        NEXT_PUBLIC_APP_URL: ${{ secrets.PROD_APP_URL }}
        NEXT_PUBLIC_API_URL: ${{ secrets.PROD_API_URL }}
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.PROD_FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.PROD_FIREBASE_AUTH_DOMAIN }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.PROD_FIREBASE_PROJECT_ID }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.PROD_FIREBASE_STORAGE_BUCKET }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.PROD_FIREBASE_MESSAGING_SENDER_ID }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.PROD_FIREBASE_APP_ID }}
        NEXT_PUBLIC_OPENAI_API_KEY: ${{ secrets.PROD_OPENAI_API_KEY }}
        NEXT_PUBLIC_GEMINI_API_KEY: ${{ secrets.PROD_GEMINI_API_KEY }}
        NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.PROD_STRIPE_PUBLISHABLE_KEY }}
        STRIPE_SECRET_KEY: ${{ secrets.PROD_STRIPE_SECRET_KEY }}
        NEXT_PUBLIC_GA_TRACKING_ID: ${{ secrets.PROD_GA_TRACKING_ID }}
        
    - name: Deploy to Vercel (Production)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
        vercel-args: '--prod=true'
        
    - name: Create GitHub Release
      if: github.event_name == 'release'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.release.tag_name }}
        release_name: ${{ github.event.release.name }}
        body: ${{ github.event.release.body }}
        draft: false
        prerelease: false
